package {{.table.PackageName}}Dao

import (
    "{{.table.FunctionAuthor}}/{{.table.PackageName}}/{{.table.PackageName}}Models"
    "database/sql"
    "fmt"
    "github.com/jmoiron/sqlx"
)

// ==========================================================================
// date：{{.table.GenerateTime.Format "2006-01-02 15:04:05" }}
// author：{{.table.FunctionAuthor}}
// version: v1.0
// ==========================================================================


type {{.table.StructName}}Dao struct {
	{{.table.StructName}}Sql string
}

func New{{.table.StructName}}Dao()*{{.table.StructName}}Dao {
	return &{{.table.StructName}}Dao{
		{{.table.StructName}}Sql: `select {{range $index, $column := .table.Columns}}{{if ne $index 0}},{{end}}{{$column.ColumnName}} {{end}} from {{.table.TableName }}`,
	}
}



func ({{.table.BusinessName}} *{{.table.StructName}}Dao) Select{{.table.StructName}}ById({{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.HtmlField}} {{$column.GoType}}{{end}}{{end}}) (vo *{{.table.PackageName}}Models.{{.table.StructName}}Vo) {

	vo = new({{.table.PackageName}}Models.{{.table.ClassName}}Vo)
	err := db.MysqlDb.Get({{.table.BusinessName}}, select{{.table.ClassName}}Sql+from{{.table.ClassName}}Sql+" where {{range $index, $column := .table.Columns}}{{if eq $column.IsPk "1"}}{{$column.ColumnName}} = ？", {{$column.HtmlField}}{{end}}{{end}})
	if err == sql.ErrNoRows {
		return nil
	} else if err != nil {
		panic(err)
	}
	return
}